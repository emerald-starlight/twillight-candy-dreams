export * from '@volar/source-map';
export * from '@volar/language-core/lib/editorFeatures';
export * from '@volar/language-core/lib/linkedCodeMap';
export * from '@volar/language-core/lib/types';
export * from '@volar/language-core/lib/utils';
import { SourceMap } from '@volar/source-map';
import type * as ts from 'typescript';
import type { CodeInformation, Language, LanguagePlugin, VirtualCode } from '@volar/language-core/lib/types';
export declare function createLanguage(plugins: LanguagePlugin[], caseSensitive: boolean, sync: (id: string) => void): Language;
export declare function updateVirtualCodeMapOfMap(virtualCode: VirtualCode, mapOfMap: Map<string, [ts.IScriptSnapshot, SourceMap<CodeInformation>]>, getSourceSnapshot: (id: string | undefined) => [string, ts.IScriptSnapshot] | undefined): void;
export declare function forEachEmbeddedCode(virtualCode: VirtualCode): Generator<VirtualCode>;
